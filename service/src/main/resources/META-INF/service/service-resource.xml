<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:jdbc="http://www.springframework.org/schema/jdbc"  
	xmlns:jee="http://www.springframework.org/schema/jee" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:jpa="http://www.springframework.org/schema/data/jpa"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd
		http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-4.0.xsd
		http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-4.0.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
		http://www.springframework.org/schema/aop 
		http://www.springframework.org/schema/aop/spring-aop.xsd
		http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa-1.3.xsd"
	default-lazy-init="true">	
		
		
	<!--
	<bean id="dataSource" class="org.apache.tomcat.jdbc.pool.DataSource" destroy-method="close">
			<property name="driverClassName" value="${app.jdbc.driverClassName}" />
			<property name="url" value="${app.jdbc.url}" />
			<property name="username" value="${app.jdbc.username}" />
			<property name="password" value="${app.jdbc.password}" />
		
			<property name="maxActive" value="${app.jdbc.pool.maxActive}" />
			<property name="maxIdle" value="${app.jdbc.pool.maxIdle}" />
			<property name="minIdle" value="0" />
			<property name="defaultAutoCommit" value="false" />
		</bean>
	-->
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">   
        <property name="driverClass" value="${app.jdbc.driverClassName}"/>
		<property name="testConnectionOnCheckin" value="true"/>
		<property name="idleConnectionTestPeriod" value="60"/>
        <property name="initialPoolSize" value="${app.database.initialPoolSize}"/>
		<property name="minPoolSize"  value="${app.database.minPoolSize}"/>
		<property name="maxPoolSize"  value="${app.database.maxPoolSize}"/>
		<property name="maxStatements" value="0" />
		<property name="maxStatementsPerConnection" value="100" />
		<property name="acquireIncrement"  value="${app.database.acquireIncrement}"/>
		<property name="jdbcUrl" value="${app.jdbc.url}"/>
		<property name="user" value="${app.jdbc.username}"/>
		<property name="password" value="${app.jdbc.password}"/>   
	</bean> 
	
		
	<bean class="org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor" />
	<bean class="org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor" />
		
	<bean id="persistenceProvider" class="org.hibernate.jpa.HibernatePersistenceProvider" /> 
	
	<!-- Jpa Entity Manager 配置 -->
	<bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean"> 

		<property name="dataSource" ref="dataSource"/>
		<property name="jpaVendorAdapter" ref="hibernateJpaVendorAdapter"/>
		<property name="packagesToScan" value="com.codingera.module.*.model"/>
		 <property name="jpaProperties">
            <props>
                 <prop key="hibernate.dialect">${hibernate.dialect}</prop> 
                <prop key="hibernate.ejb.naming_strategy">org.hibernate.cfg.ImprovedNamingStrategy</prop>
                <prop key="hibernate.cache.provider_class">org.hibernate.cache.NoCacheProvider</prop>
                <prop key="hibernate.show_sql">${hibernate.showSql}</prop>
                <prop key="hibernate.format_sql">${hibernate.format_sql}</prop>
                <prop key="hibernate.hbm2ddl.auto">${hibernate.hbm2ddl.auto}</prop>
            </props>
        </property>
	</bean>
	
	<bean id="hibernateJpaVendorAdapter" class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter"></bean>
	
	

	<!-- Spring Data Jpa配置 -->
 	<!-- <jpa:repositories base-package="com.gaykes.www.repository"  transaction-manager-ref="transactionManager" entity-manager-factory-ref="entityManagerFactory"/> -->
 	<jpa:repositories base-package="com.codingera.module.*.repository"  transaction-manager-ref="transactionManager" entity-manager-factory-ref="entityManagerFactory"/>
   
	<!-- Jpa 事务配置 -->
	<bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
		<property name="entityManagerFactory" ref="entityManagerFactory"/>
	</bean>

	<!-- 使用annotation定义事务 
	<tx:annotation-driven transaction-manager="transactionManager" proxy-target-class="true" />
	-->
	<!-- JSR303 Validator定义 -->
 	<bean id="validator" class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean" />
	<bean id="methodInvocationInterceptor" class="com.codingera.common.framework.aop.MethodInvocationInterceptor"/>


	
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="get*" read-only="true" />
			<tx:method name="find*" read-only="true" />
			<tx:method name="*" />
		</tx:attributes>
	</tx:advice>
	<tx:advice id="noTxAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="*" propagation="NEVER" />
		</tx:attributes>
	</tx:advice>
	
	 <aop:config>
		<aop:pointcut id="txServices"
			expression="execution(* com..*service.*.impl.*ServiceImpl.*(..))" />
		<aop:pointcut id="txServices1"
			expression="execution(* com..*service.impl.*ServiceImpl.*(..))" />
		<aop:advisor advice-ref="txAdvice" pointcut-ref="txServices" />
		<aop:advisor advice-ref="txAdvice" pointcut-ref="txServices1" />
		<aop:advisor advice-ref="methodInvocationInterceptor" pointcut-ref="txServices" />
		<aop:advisor advice-ref="methodInvocationInterceptor" pointcut-ref="txServices1" />
	</aop:config>  
	
</beans>